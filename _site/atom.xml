<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

 <title>{ni[T]in}</title>
 <link href="http://localhost:4000/atom.xml" rel="self"/>
 <link href="http://localhost:4000/"/>
 <updated>2018-01-22T22:04:51-05:00</updated>
 <id>http://localhost:4000</id>
 <author>
   <name></name>
   <email></email>
 </author>

 
 <entry>
   <title>Maps Patterns</title>
   <link href="http://localhost:4000/2017/02/01/maps/"/>
   <updated>2017-02-01T19:20:00-05:00</updated>
   <id>http://localhost:4000/2017/02/01/maps</id>
   <content type="html">&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;containsKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;containsValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;put&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//get value from the key&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Set&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;keySet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;//get all the keys&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;map-iterator-using-set&quot;&gt;Map Iterator using Set&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;//Iterator on all the keys&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;keySet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;map-iterator-using-entryset&quot;&gt;Map Iterator using EntrySet&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;HashMap&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;entrySet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;Entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;entrySet&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()){&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getValue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;removing-the-element&quot;&gt;Removing the element&lt;/h4&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;iterator&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;while&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;hasNext&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tempKey&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tempKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)%&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// Concurrent Modification Exception&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;tempKey&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// DO NOT USE THIS&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;//ALWAYS REMOVE USING ITERATOR&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;itr&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;remove&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Count the number of occurances&lt;/li&gt;
&lt;/ol&gt;
&lt;noscript&gt;&lt;pre&gt;Map&amp;lt;String, Integer&amp;gt; map = new HashMap&amp;lt;String, Integer&amp;gt;();

// Putting the contents of a list into HaspMap, with its number of occurances
for (int i = 0; i &amp;lt; list.size()-1; i++) {
    //If the word is not there inside, put the key with value as 1
    if (!map.containsKey(list.get(i))) {
        map.put(list.get(i), 1);
    } else {
        int count = map.get(list.get(i));
        map.put(list.get(i), count + 1);//increase the count by one
    }
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/nitinkc/bba1ebd048609bc3336bcf738c2a9037.js&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Arrays Patterns</title>
   <link href="http://localhost:4000/2016/11/25/Arrays-Patterns/"/>
   <updated>2016-11-25T15:20:00-05:00</updated>
   <id>http://localhost:4000/2016/11/25/Arrays Patterns</id>
   <content type="html">&lt;h2 id=&quot;arrays-patterns&quot;&gt;Arrays Patterns&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. Two Pointer Technique
   1. One Fast runner the other one runs slow.
   2. One begins from start, other from the end. 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;noscript&gt;&lt;pre&gt;public void revereseString2Pointes(char[] str){
 //check if the string is null
  if(str.length == 0) return;
  
  int start = 0, end = str.length - 1;
  
  //Use while for code clarity
  while (i &amp;lt; j){
    swap (str, i, j);
    i++;
    j--;
  }
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/nitinkc/8a3eb81f7ccf93b013a2fe8455a04703.js&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Upgrading the Macbook Pro - Model A1278</title>
   <link href="http://localhost:4000/2016/07/31/Mac-Upgrade/"/>
   <updated>2016-07-31T11:04:00-04:00</updated>
   <id>http://localhost:4000/2016/07/31/Mac-Upgrade</id>
   <content type="html">&lt;h2 id=&quot;upgrading-the-macbook-pro&quot;&gt;Upgrading the Macbook Pro&lt;/h2&gt;
&lt;p&gt;I was planning to buy a new Macbook as the one which was gifted by one of my best friends became a really slow.&lt;/p&gt;

&lt;p&gt;Ijust checked a few videos on Youtube and found out that just by replaching and changing my HDD to SSD, it will boost up the performance.&lt;/p&gt;

&lt;p&gt;Thus I ordered everything online&lt;/p&gt;

&lt;p&gt;Opening up the Macbook Pro flap needs special tools, so i ordered a universal tool kit to open all the screws of macbook, iphone and other android phones.&lt;/p&gt;

&lt;p&gt;I upgraded&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;RAM from the original 4GB to 16 GB - Crucial 16GB Kit (8GBx2) DDR3L 1600 SODIMM Memory for Mac System(CT2K8G3S160BM )- (Crucible RAM - https://www.amazon.com/gp/product/B008LTBJFW/ref=od_aui_detailpages01?ie=UTF8&amp;amp;psc=1)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Replaced the original HDD with Samsung SSD - Samsung 850 EVO - 500GB - 2.5-Inch SATA III Internal SSD (MZ-75E500B/AM) (https://www.amazon.com/gp/product/B00OBRE5UE/ref=od_aui_detailpages01?ie=UTF8&amp;amp;psc=1)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The hard disk that came out cam be used as an external drive using an enclosure. The best one that i liked is
HandAcc 2.5 Inch USB 3.0 Hard Drive External Enclosure Case For 9.5mm &amp;amp; 7mm 2.5” SATA HDD and SSD, Support UASP, Tool-free, Silver
(https://www.amazon.com/gp/product/B015P98F8E/ref=od_aui_detailpages01?ie=UTF8&amp;amp;psc=1)&lt;/p&gt;

&lt;p&gt;Before upgrading the SSD, the clone needs to be created from the original HDD. This clone on the new SSD will help use the SSD directly. I have used Bombich Software’s Carbon Copy Cleaner. The free 30 day trial was enough for me to clone my HDD. It took nearly 6 hours to clone 460GB Data.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>SQL Revisions</title>
   <link href="http://localhost:4000/2016/04/15/sql-revisions/"/>
   <updated>2016-04-15T07:45:00-04:00</updated>
   <id>http://localhost:4000/2016/04/15/sql-revisions</id>
   <content type="html">&lt;p&gt;https://en.wikibooks.org/wiki/SQL_Exercises/Employee_management&lt;/p&gt;

&lt;p&gt;https://en.wikibooks.org/wiki/SQL_Exercises&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Linux Files</title>
   <link href="http://localhost:4000/2016/04/14/linux-files/"/>
   <updated>2016-04-14T16:11:00-04:00</updated>
   <id>http://localhost:4000/2016/04/14/linux-files</id>
   <content type="html">&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Directory&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;/&lt;/td&gt;
      &lt;td&gt;Root&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/boot&lt;/td&gt;
      &lt;td&gt;For Linux kernel and boot loader files.The kernel is a file called &lt;strong&gt;vmlinuz&lt;/strong&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/etc&lt;/td&gt;
      &lt;td&gt;Configuration files (All &lt;strong&gt;text files&lt;/strong&gt;).&lt;br /&gt;&lt;br /&gt; &lt;strong&gt;/etc/passwd&lt;/strong&gt; Here users are defined &amp;amp; essential information for each user is kept like username, password (&lt;strong&gt;Encrypetd &amp;amp; stored in shadow&lt;/strong&gt;), group id, userid, user id info, home directory, command shell etc… .&lt;br /&gt; Password is stored in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/shadow&lt;/code&gt; file not in &lt;code class=&quot;highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; &lt;br /&gt; &lt;strong&gt;/etc/fstab&lt;/strong&gt; table of devices that get mounted when your system boots. defines your disk drives.&lt;br /&gt; &lt;strong&gt;/etc/hosts&lt;/strong&gt; Lists the network host names and IP addresses that are intrinsically known to the system. &lt;br /&gt; &lt;strong&gt;/etc/init.d&lt;/strong&gt; This directory contains the scripts that start various system services at boot time.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/bin &lt;br /&gt;/usr/bin&lt;/td&gt;
      &lt;td&gt;contains most of the executable programs for the system. /bin : system requires to operate, /usr/bin contains applications for the system’s users.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/sbin&lt;br /&gt; /usr/sbin&lt;/td&gt;
      &lt;td&gt;Executables for system administration by the superuser.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/usr&lt;/td&gt;
      &lt;td&gt;Things that support user applications &lt;br /&gt; &lt;strong&gt;/usr/share/X11&lt;/strong&gt; Support files for the X Windows system&lt;br /&gt; &lt;strong&gt;/usr/share/dict&lt;/strong&gt; Dictionaries for the spelling checker. Ckeck &lt;code class=&quot;highlighter-rouge&quot;&gt;look&lt;/code&gt; and &lt;code class=&quot;highlighter-rouge&quot;&gt;ispell&lt;/code&gt;.&lt;br /&gt;&lt;strong&gt;/usr/share/doc&lt;/strong&gt; documentation files in a variety of formats.&lt;br /&gt;&lt;strong&gt;/usr/share/man&lt;/strong&gt; Place for man pages.&lt;br /&gt; &lt;strong&gt;/usr/src&lt;/strong&gt; Source code files.(if kernel source code package is installed)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/usr/local&lt;br /&gt; /usr/local/bin&lt;/td&gt;
      &lt;td&gt;Used for the installation of software for local machine.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/var&lt;/td&gt;
      &lt;td&gt;Files that change as the system is running. &lt;br /&gt; &lt;strong&gt;/var/log&lt;/strong&gt; log files updated as the system runs. &lt;br /&gt; &lt;strong&gt;/var/spool&lt;/strong&gt; This directory is used to hold files that are queued for some process, such as mail messages and print jobs. Eg: local email is first stored in &lt;code class=&quot;highlighter-rouge&quot;&gt;/var/spool/mail&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/lib&lt;/td&gt;
      &lt;td&gt;shared libraries (like .dll in Windows)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/dev&lt;/td&gt;
      &lt;td&gt;Devices (as files) that are available to the system. /dev/sda (/dev/hda on older systems) is the first IDE hard drive.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/proc&lt;/td&gt;
      &lt;td&gt;processes running on the system.  Many of these entries can be viewed. Eg. &lt;code class=&quot;highlighter-rouge&quot;&gt;/proc/cpuinfo&lt;/code&gt;. This entry will tell you what the kernel thinks of your CPU.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;/media &lt;br /&gt; /mnt&lt;/td&gt;
      &lt;td&gt;The /media directory is used for mount points. This process of attaching (&lt;em&gt;devices attached to the file system tree in various places&lt;/em&gt;) a device to the tree is called &lt;strong&gt;mounting&lt;/strong&gt;. For a device to be available, it must first be mounted. &lt;br /&gt;&lt;br /&gt;When your system boots, it reads a list of mounting instructions in the file /etc/fstab, which describes which device is mounted at which mount point in the directory tree. This takes care of the hard drives, but you may also have devices that are considered temporary, such as CD-ROMs and floppy disks. Since these are removable, they do not stay mounted all the time. The /media directory is used by the automatic device mounting mechanisms found in modern desktop oriented Linux distributions. &lt;br /&gt;&lt;br /&gt;On systems that require manual mounting of removable devices, the &lt;strong&gt;/mnt&lt;/strong&gt; directory provides a convenient place for &lt;strong&gt;mounting these temporary devices&lt;/strong&gt;. You will often see the directories /mnt/floppy and /mnt/cdrom. To see what devices and mount points are used, type mount.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

</content>
 </entry>
 
 <entry>
   <title>SQL Joins</title>
   <link href="http://localhost:4000/2016/04/14/sql-joins/"/>
   <updated>2016-04-14T12:21:00-04:00</updated>
   <id>http://localhost:4000/2016/04/14/sql-joins</id>
   <content type="html">&lt;p&gt;JOINS
    INNER &amp;amp; OUTER
    INNER – EQUI JOIN, NON-EQUI JOIN, NATURAL JOIN, SELF JOIN
    OUTER – LEFT, RIGHT &amp;amp; FULL&lt;/p&gt;

&lt;p&gt;OUTER is result of INNER &amp;amp; some additional data &lt;br /&gt;
Data from one of the tables or from both the tables&lt;/p&gt;

&lt;p&gt;INNER – select t1.* from t1, t2 where t1.c = t2.c
And t2.d &amp;gt; 2000
SELF JOIN – only one table is involved in join
Select t1.* from KYC k1, KYC k2 where k1.kyc_ind = K2.kyc_ind&lt;/p&gt;

&lt;p&gt;OUTER is smarter than INNER
Customer – cust_id -1,2,3
Sales – cust_id- 3, 6&lt;/p&gt;

&lt;p&gt;Select * from customer c, sales s where c.cust_id = s.cust_id&lt;/p&gt;

&lt;p&gt;Select * from customer c LEFT OUTER JOIN sales s ON c.cust_id = s.sales_id
Select * from customer c RIGHT OUTER JOIN sales s ON c.cust_id = s.sales_id
Select * from customer c FULL OUTER JOIN sales s ON c.cust_id = s.sales_id&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Test</title>
   <link href="http://localhost:4000/2016/04/14/testing/"/>
   <updated>2016-04-14T12:21:00-04:00</updated>
   <id>http://localhost:4000/2016/04/14/testing</id>
   <content type="html">&lt;h2 class=&quot;no_toc&quot; id=&quot;contents&quot;&gt;Contents&lt;/h2&gt;

&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#sql&quot; id=&quot;markdown-toc-sql&quot;&gt;SQL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#java&quot; id=&quot;markdown-toc-java&quot;&gt;Java&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#linux&quot; id=&quot;markdown-toc-linux&quot;&gt;Linux&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#hibernate&quot; id=&quot;markdown-toc-hibernate&quot;&gt;Hibernate&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;#spring&quot; id=&quot;markdown-toc-spring&quot;&gt;Spring&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;sql&quot;&gt;SQL&lt;/h5&gt;
&lt;p&gt;&lt;i class=&quot;fa fa-question&quot;&gt;&lt;/i&gt; How to retrieve all the data from a table.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;i class=&quot;fa fa-check&quot;&gt;&lt;/i&gt;
 Use * wild card. Select * from tablename.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-question&quot;&gt;&lt;/i&gt; Retrieve a particular empid.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;i class=&quot;fa fa-check&quot;&gt;&lt;/i&gt;
 Use &lt;strong&gt;where&lt;/strong&gt; clause&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-question&quot;&gt;&lt;/i&gt; How many types to delete the data&lt;/p&gt;

&lt;blockquote&gt;
  &lt;ul&gt;
    &lt;li&gt;truncate (deletes data but not table): TRUNCATE removes all rows from a table&lt;/li&gt;
    &lt;li&gt;The DELETE command is used to remove rows from a table
      &lt;ul&gt;
        &lt;li&gt;DELETE FROM emp WHERE job = ‘CLERK’;&lt;/li&gt;
        &lt;li&gt;you need to COMMIT or ROLLBACK the transaction to make the change permanent&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
    &lt;li&gt;drop table/database : deletes a table/database
      &lt;ul&gt;
        &lt;li&gt;All the tables’ rows, indexes and privileges will also be removed&lt;/li&gt;
        &lt;li&gt;The operation cannot be rolled back.&lt;/li&gt;
      &lt;/ul&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;strong&gt;Whiteboard:&lt;/strong&gt; Find count departments id where more than 5 employees.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;# employees&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dname&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;employees&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;did&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;did&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dname&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;having&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;SET Theory: Inline-view, TOP-N Analysis
Select 11th heighest salary.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SALARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rownum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt; 
&lt;span class=&quot;n&quot;&gt;MINUS&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP_ID&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SALARY&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMPLOYEE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;order&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;desc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rownum&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Whiteboard:&lt;/strong&gt; Followed by bonus : related to sub query. Name all the depts with more than 5 employees.&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dname&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dept&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;employees&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;mapping&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eid&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eid&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;did&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;did&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;dname&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;having&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-question&quot;&gt;&lt;/i&gt; Diff. in inner join and outer join&lt;/p&gt;

&lt;pre&gt;
JOINS : to combine rows from two or more tables, based on a common field between them.
    INNER (Common Type) – EQUI JOIN, NON-EQUI JOIN, NATURAL JOIN, SELF JOIN
    OUTER (Smarter than inner)– LEFT, RIGHT &amp;amp; FULL

    OUTER is result of INNER &amp;amp; some additional data   
&lt;/pre&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;INNER JOIN&lt;/strong&gt;: Return rows as long as there one match in both tables&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;SELECT SSN, E.Name AS EName, LastName, D.Name AS DName, Department, Code, Budget
 FROM Employees E &lt;strong&gt;INNER JOIN&lt;/strong&gt; Departments D
 &lt;strong&gt;ON&lt;/strong&gt; E.Department = D.Code;
 &lt;br /&gt;&lt;br /&gt;&lt;strong&gt;IS SAME AS&lt;/strong&gt;&lt;br /&gt;&lt;br /&gt;
 SELECT SSN, E.Name AS Name_E, LastName, D.Name AS Name_D, Department, Code, Budget
 FROM &lt;strong&gt;Employees E, Departments D&lt;/strong&gt;
 &lt;strong&gt;where&lt;/strong&gt; E.Department = D.Code;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;SELF JOIN&lt;/strong&gt; – only one table is involved in join &lt;br /&gt;&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' works for '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ename&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;&quot;Employees and their Managers&quot;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;JOIN&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;ON&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mgr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;OR can be written as&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' works for '&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;||&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ename&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;&quot;Employees and their Managers&quot;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;emp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;where&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;mgr&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;empno&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;br /&gt;
&lt;strong&gt;LEFT OUTER JOIN&lt;/strong&gt;: Return all rows from the left table, even if there are 
no matches in the right table and all matching rows from right&lt;br /&gt;
&lt;strong&gt;RIGHT OUTER JOIN&lt;/strong&gt;: Return all rows from the right table and matching rows from left&lt;br /&gt;
&lt;strong&gt;FULL OUTER JOIN&lt;/strong&gt;: Return rows when there is a match in one of the tables&lt;br /&gt;&lt;/p&gt;
  &lt;pre&gt;
The USING clause
&lt;/pre&gt;
&lt;/blockquote&gt;

&lt;p&gt;The USING clause is used if several columns share the same name but you don’t want to join using all of these common columns. The columns listed in the USING clause can’t have any qualifiers in the statement, including the WHERE clause.
The ON clause&lt;/p&gt;

&lt;p&gt;The ON clause is used to join tables where the column names don’t match in both tables. The join conditions are removed from the filter conditions in the WHERE clause.
&amp;lt;/pre&amp;gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Select * from customer c LEFT OUTER JOIN sales s ON c.cust_id = s.sales_id
Select * from customer c RIGHT OUTER JOIN sales s ON c.cust_id = s.sales_id
Select * from customer c FULL OUTER JOIN sales s ON c.cust_id = s.sales_id
&amp;lt;/pre&amp;gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-question&quot;&gt;&lt;/i&gt; what is left outer join and right outer join.&lt;/p&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-question&quot;&gt;&lt;/i&gt; explain plan, performance tuning.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The EXPLAIN PLAN statement displays execution plans chosen by the Oracle optimizer for SELECT, UPDATE, INSERT, and DELETE statements. A statement’s execution plan is the sequence of operations Oracle performs to run the statement.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-question&quot;&gt;&lt;/i&gt; syntax for finding indexes in tuning.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Indexes are special lookup tables that the database search engine can use to 
speed up data retrieval. An index is a pointer to data in a 
table.&lt;/p&gt;
  &lt;pre&gt;
CREATE UNIQUE INDEX index_name
ON table_name (column_name)
&lt;/pre&gt;
  &lt;p&gt;&lt;i class=&quot;fa fa-question&quot;&gt;&lt;/i&gt; full table scan&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-question&quot;&gt;&lt;/i&gt; index advantegs of indexes in sql tuning? What is the syntax of doing that.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;Indexes are a performance drag when the time comes to modify records.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-question&quot;&gt;&lt;/i&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Multiple Conditions : AND &lt;br /&gt;&lt;/p&gt;
  &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10000&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;dateofjoining&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;‘&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Jan&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1990&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;’&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;&lt;br /&gt;Range Selection - BETWEEN&lt;/p&gt;
  &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;salary&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;between&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9000&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AND&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;20000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
  &lt;p&gt;&lt;br /&gt;Exact List Matching&lt;/p&gt;
  &lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;EMP&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;WHERE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;employeeID&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;IN&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3001&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;3002&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;i class=&quot;fa fa-question&quot;&gt;&lt;/i&gt; Full table scan&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;A full table scan occurs when an index is either not used or there is no index on the table(s)&lt;/li&gt;
  &lt;li&gt;Full table scans should be avoided when reading large tables.For example, a full table scan is performed when a table that does not have an index is read&lt;/li&gt;
  &lt;li&gt;FTS will be performed even though an index is present on that table.
    &lt;ul&gt;
      &lt;li&gt;If a query does have a WHERE clause, but none of the columns in that WHERE clause match.&lt;/li&gt;
      &lt;li&gt;when WHERE clause prevents the use of an index like below.&lt;/li&gt;
      &lt;li&gt;If the NOT EQUAL (the “&amp;lt;&amp;gt;“) operator is used.&lt;/li&gt;
      &lt;li&gt;If the NOT operator is used.&lt;/li&gt;
      &lt;li&gt;If the wildcard operator is used in the first position of a comparison string. An example is “WHERE NAME LIKE ‘%INTERVIEW%’”.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;java&quot;&gt;Java&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;what are the data types&lt;/li&gt;
  &lt;li&gt;String equality&lt;/li&gt;
  &lt;li&gt;GC - when does the world stops&lt;/li&gt;
  &lt;li&gt;Java heaps - memory&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Whiteboard&lt;/strong&gt; Find popular name in a List of names. Most frequently name in a List&lt;/p&gt;

&lt;h5 id=&quot;linux&quot;&gt;Linux&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;what is ls.
    &lt;ul&gt;
      &lt;li&gt;list all the commands&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Commands to see processesps commands and jobs command
    &lt;ul&gt;
      &lt;li&gt;top&lt;/li&gt;
      &lt;li&gt;ps -ef&lt;/li&gt;
      &lt;li&gt;GUI : System monitor (GNOME, KDE System -&amp;gt; Monitor)&lt;/li&gt;
      &lt;li&gt;kill -9 to terminate.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Error in file access. (File Permission)
    &lt;ul&gt;
      &lt;li&gt;Ownership permission (ugo -&amp;gt; USER, GROUP &amp;amp; OTHER)&lt;/li&gt;
      &lt;li&gt;Viweing Permission (r=4; w=2; x=1)&lt;/li&gt;
      &lt;li&gt;eg: 700 (rwx for u, none got g,o)&lt;/li&gt;
      &lt;li&gt;chmod for changing file permission (chmod 771 file.exe)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;what is there in exe Folder.
    &lt;ul&gt;
      &lt;li&gt;&lt;em&gt;&lt;a href=&quot;/2016/04/14/linux-files/&quot;&gt;Important Linux Files&lt;/a&gt;&lt;/em&gt;.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;grep : Search a pettern in File.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;grep ‘pattern to search’ file1 file2&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;grep -i -n ‘administrator’  file1.txt&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;Ignoring the case ( -i)&lt;/li&gt;
      &lt;li&gt;Displaying line Numbers  ( -n )&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;How can u find a pattern and how to do recursively
    &lt;ul&gt;
      &lt;li&gt;grep -r “texthere” .&lt;/li&gt;
      &lt;li&gt;Recursively search “texthere” in PWD.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Given directory hierarchy. Find a file.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;find / -name 'program.c' 2&amp;gt;errors.txt&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;Start searching from the root directory (i.e / directory)&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;-name&lt;/code&gt; : Given search text is the filename rather than any other attribute of a file&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;'program.c'&lt;/code&gt; Search text that we have entered. Always enclose the filename in single quotes.. why to do this is complex.. so simply do so.&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ find /mp3collection -name '*.mp3' -size -5000k&lt;/code&gt; find in /mp3collection, only those mp3 files that have a size less than 5000 Kilobytes ( &amp;lt; 5MB)&lt;/li&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;$ find / -size +10000k&lt;/code&gt; search from the / directory for any file that is larger than 10000k (&amp;gt; 10MB)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;how do u connect to remove server securely.
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh remote_username@remote_host&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;SSH keys should be generated on the computer you wish to log in from. This is usually your local computer. Enter the following into the command line. &lt;code class=&quot;highlighter-rouge&quot;&gt;ssh-keygen -t rsa&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;remove the file from remote server
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ssh username@domain.com 'rm /some/where/some_file.war'&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;difference between move and copy
    &lt;ul&gt;
      &lt;li&gt;mv displaces the file, cp makes a new copy&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;diff : compare the two files.
    &lt;ul&gt;
      &lt;li&gt;cmp returns first occurrence of difference&lt;/li&gt;
      &lt;li&gt;diff returns all differences&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Distributions &amp;amp; version of Linux
    &lt;ul&gt;
      &lt;li&gt;Fedora/RedHat based : Fedora 23, Cent OS&lt;/li&gt;
      &lt;li&gt;Debian Based : Ubuntu 15 LTS&lt;/li&gt;
      &lt;li&gt;Mac OS is based on a BSD code base&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;What is GNOME.
    &lt;ul&gt;
      &lt;li&gt;GNOME desktop and KDE&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;hibernate&quot;&gt;Hibernate&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;Disadvantage of Hibernate&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;
1. Not that flexible when it comes to mapping composite-ids (although you can do a lot). While this is not a fault of Hibernate as composite-ids are typically used in legacy systems, it can be a pain when attempting to map legacy tables.

2. Everything is an object. If you need only a portion of data (say, for a search), you would still have to retrieve the object. However, this is true for any ORM strategy.

3. In some cases, you will encounter the (n+1) select problem. That is, Hibernate will execute (n+1) queries for going through a list of records of size n. There are some mechanisms suggested by Hibernate that can be used to mitigate this risk.

4. Till Hibernate 3, you cannot map multiple tables to a single class. This has been fixed in Hibernate 3 using the join tag.
&lt;/pre&gt;

&lt;ul&gt;
  &lt;li&gt;Hibernate over JDBC
    &lt;ul&gt;
      &lt;li&gt;Make software database independent. Can replace any other database with this.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h5 id=&quot;spring&quot;&gt;Spring&lt;/h5&gt;
&lt;ul&gt;
  &lt;li&gt;What is Dependency Injection&lt;/li&gt;
&lt;/ul&gt;
&lt;pre&gt;IOC(Inversion Of Controller):   Giving control to the container to get instance of object is called Inversion of Control., 
    • means instead of you are creating object using new operator, let the container do that for you.

DI(Dependency Injection):  Decoupling by passing an object to a function rather than CREATING the object the circle inside the method.
Way of injecting properties to an object is called Dependency injection.

    We have three types of Dependency injection
        1)  Constructor Injection : Constructor-based DI is accomplished when the container invokes a class constructor with a number of arguments, each representing a dependency on other class.
        2)  Setter/Getter Injection : Setter-based DI is accomplished by the container calling setter methods on your beans after invoking a no-argument constructor or no-argument static factory method to instantiate your bean.
        3)  Interface Injection
Spring support only Constructor Injection and Setter/Getter Injection.
&lt;/pre&gt;
&lt;ul&gt;
  &lt;li&gt;what is setter injection and constructor injection&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Java Revisions</title>
   <link href="http://localhost:4000/2016/04/13/java-theory-revisions/"/>
   <updated>2016-04-13T12:11:00-04:00</updated>
   <id>http://localhost:4000/2016/04/13/java-theory-revisions</id>
   <content type="html">&lt;h5 id=&quot;objects&quot;&gt;Objects&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;Objects&lt;/li&gt;
  &lt;li&gt;OOPS ()
    &lt;ul&gt;
      &lt;li&gt;Inheritance&lt;/li&gt;
      &lt;li&gt;Polymorphism&lt;/li&gt;
      &lt;li&gt;Abstraction&lt;/li&gt;
      &lt;li&gt;
        &lt;hr /&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Inheritance
    &lt;ul&gt;
      &lt;li&gt;Overloading vs overriding&lt;/li&gt;
      &lt;li&gt;multiple inheritance&lt;/li&gt;
      &lt;li&gt;method hiding&lt;/li&gt;
      &lt;li&gt;can static be inherited.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Abstraction
    &lt;ul&gt;
      &lt;li&gt;Interface
        &lt;ul&gt;
          &lt;li&gt;variables in interface&lt;/li&gt;
          &lt;li&gt;default interface&lt;/li&gt;
          &lt;li&gt;100% Abstraction&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;Abstraction instantiation?&lt;/li&gt;
      &lt;li&gt;Use Abstraction when there is some relation&lt;/li&gt;
      &lt;li&gt;Use Interface when there is no relation&lt;/li&gt;
      &lt;li&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Polymorphism
    &lt;ul&gt;
      &lt;li&gt;Runtime Ploymorphism vs compile time polymorphism&lt;/li&gt;
      &lt;li&gt;Polymorphism as a way to have multiple inheritance&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;/li&gt;
  &lt;li&gt;Thread
    &lt;ul&gt;
      &lt;li&gt;Ways to implement a Thread&lt;/li&gt;
      &lt;li&gt;Concurrency package&lt;/li&gt;
      &lt;li&gt;Volatile&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Collections
    &lt;ul&gt;
      &lt;li&gt;List
        &lt;ul&gt;
          &lt;li&gt;ArrayList&lt;/li&gt;
          &lt;li&gt;LinkedList&lt;/li&gt;
          &lt;li&gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 <entry>
   <title>Graphs</title>
   <link href="http://localhost:4000/2016/04/11/graphs/"/>
   <updated>2016-04-11T18:20:00-04:00</updated>
   <id>http://localhost:4000/2016/04/11/graphs</id>
   <content type="html">&lt;h5 id=&quot;graphs&quot;&gt;Graphs&lt;/h5&gt;

</content>
 </entry>
 
 <entry>
   <title>Stacks</title>
   <link href="http://localhost:4000/2016/04/11/stacks/"/>
   <updated>2016-04-11T18:20:00-04:00</updated>
   <id>http://localhost:4000/2016/04/11/stacks</id>
   <content type="html">&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Integer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;gt;();&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Both add and push does the same thing&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;pop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// return the value and pops the top&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;isEmpty&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;stack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;peek&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;c1&quot;&gt;// Return the top&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h5 id=&quot;stack-using-an-arraylistarray-also-min&quot;&gt;Stack Using an ArrayList/Array (Also min)&lt;/h5&gt;

&lt;h5 id=&quot;stack-using-2-stacks-also-min&quot;&gt;Stack using 2 stacks (Also min)&lt;/h5&gt;

&lt;p&gt;#####&lt;/p&gt;

</content>
 </entry>
 
 <entry>
   <title>Queue</title>
   <link href="http://localhost:4000/2016/04/11/queues/"/>
   <updated>2016-04-11T07:33:00-04:00</updated>
   <id>http://localhost:4000/2016/04/11/queues</id>
   <content type="html">&lt;h5 id=&quot;queue-using-an-arraylistarray&quot;&gt;Queue Using an ArrayList/Array&lt;/h5&gt;

</content>
 </entry>
 
 <entry>
   <title>Trees</title>
   <link href="http://localhost:4000/2016/04/06/trees/"/>
   <updated>2016-04-06T01:14:00-04:00</updated>
   <id>http://localhost:4000/2016/04/06/trees</id>
   <content type="html">&lt;h5 id=&quot;trees-iteration&quot;&gt;Trees Iteration&lt;/h5&gt;
&lt;noscript&gt;&lt;pre&gt;public int countEmpty() {
    return countEmpty(overallRoot);
}

public int countEmpty(IntTreeNode root) {
    if (root == null)
        return 1;
    int count = 0;

    //if its a child, there are two empty spots
    if (root.left == null &amp;amp;&amp;amp; root.right == null) {
        return 2;
    }

    //Else if one child is there, one sopt is there and the other spot had a subproblem
    else if (root.left == null &amp;amp;&amp;amp; root.right != null) {
        return 1 + countEmpty(root.right);
    } else if (root.left != null &amp;amp;&amp;amp; root.right == null) {
        return 1 + countEmpty(root.left);
    } else
        count = countEmpty(root.left) + countEmpty(root.right);
    return count;
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/nitinkc/619d22e2ae458a3f174b0297019e6fd5.js&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Linked List</title>
   <link href="http://localhost:4000/2016/04/06/linked-list/"/>
   <updated>2016-04-06T01:14:00-04:00</updated>
   <id>http://localhost:4000/2016/04/06/linked-list</id>
   <content type="html">&lt;h5 id=&quot;linked-list-iteration&quot;&gt;Linked List Iteration&lt;/h5&gt;
&lt;noscript&gt;&lt;pre&gt;// Traditional Iteration for LinkedList
LinkedList runner = head;
	while(runner != head){
	   System.out.println(runner.data);
	   runner = runner.next;
	}
	
// The for loop
	for (LinkedList runner = head;  runner != null; runner = runner.next{
	   System.out.println(runner.data);
	}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/nitinkc/4e97df8926c80696a67ba8ae8ca87b08.js&quot;&gt; &lt;/script&gt;

&lt;h5 id=&quot;set-all-nodes-to-42&quot;&gt;Set all nodes to 42&lt;/h5&gt;
&lt;noscript&gt;&lt;pre&gt;/* Change all nodes to 42 */
ListNode runner = list;

//Change values as itrarte
while (runner != null){
    runner.data = 42;
    runner = runner.next;
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/nitinkc/9aef8598074b343be5e85c4946c9c2b7.js&quot;&gt; &lt;/script&gt;

&lt;h5 id=&quot;set-last-node-to-42&quot;&gt;Set Last node to 42&lt;/h5&gt;

&lt;noscript&gt;&lt;pre&gt;/* Add nodes with 42 in the end */
public void addNodeEnd{
    ListNode runner = list;
    while(runner.next != null){
        runner = runner.next;
    }
    runner.next = new ListNode(42, null);
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/nitinkc/3a068e9a976ed17e8dd48fb0926cce5e.js&quot;&gt; &lt;/script&gt;

&lt;h5 id=&quot;set-a-given-node-to-42&quot;&gt;Set a given node to 42&lt;/h5&gt;
&lt;noscript&gt;&lt;pre&gt;public void set(int index, int value){
    ListNode runner = front;

    while(index != 0){
        runner = runner.next;
        index--;
    }
    runner.data = value;
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/nitinkc/0adc9cbca58a575ad8cdc7519c3fd0a1.js&quot;&gt; &lt;/script&gt;

&lt;h5 id=&quot;find-the-maxmin-in-a-linked-list&quot;&gt;Find the max/min in a Linked List&lt;/h5&gt;
&lt;noscript&gt;&lt;pre&gt;public int min(){
    if (front == null)
        throw new NoSuchElementException();
    
    int min = 2147483647;// Max int value
    ListNode runner = front;
    while (runner != null){
        if (runner.data &amp;lt; min){
            min = runner.data;
        }
        runner = runner.next;
    }
    return min;
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/nitinkc/743c96f56cadd8ad502d313e871a56b6.js&quot;&gt; &lt;/script&gt;

&lt;h5 id=&quot;find-the-last-index-of-a-given-number-in-a-linked-list&quot;&gt;Find the last index of a given number in a Linked List&lt;/h5&gt;
&lt;noscript&gt;&lt;pre&gt;public int lastIndexOf(int num){
    if (front == null)
        return -1;
    
    int index = 0;
    int lastIndex = -1;
    
    ListNode runner = front;
    while (runner != null){
        if (runner.data == num){
            lastIndex = index;
        }
        index++;
        runner = runner.next;
    }
    return lastIndex;
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/nitinkc/e607f8b37d13eb2fbf4d9e6333f38869.js&quot;&gt; &lt;/script&gt;

&lt;h5 id=&quot;count-duplicate&quot;&gt;Count Duplicate&lt;/h5&gt;
&lt;noscript&gt;&lt;pre&gt;public int countDuplicates(){
    if (front == null || front.next == null)
        return 0;
    
    int duplicateCount = 0;
    int temp = front.data;
    ListNode runner = front.next;
    
    while (runner != null){
        if (temp == runner.data){
            duplicateCount++;
        }
        temp = runner.data;
        runner = runner.next;
    }
    return duplicateCount;
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/nitinkc/3376fda31d518cc1f1747bcd1135d0e7.js&quot;&gt; &lt;/script&gt;

&lt;h5 id=&quot;delete-from-the-end&quot;&gt;Delete from the end&lt;/h5&gt;
&lt;noscript&gt;&lt;pre&gt;public int deleteBack(){
  if (front == null)
      throw new NoSuchElementException();
  
  // Only one node is present
  if (front.next == null){
      int deletedData = front.data;
      front = null;
      return deletedData;
  }
  
  ListNode runner = front;
  // Reaching the second last element and staying there
  while(runner.next.next != null){
      runner = runner.next;
  }
    
  // Leaving the last node for GC
  int deletedData = runner.next.data;
  runner.next = null;
  return deletedData;
}&lt;/pre&gt;&lt;/noscript&gt;
&lt;script src=&quot;https://gist.github.com/nitinkc/b0021888f69349f08614edc484f7d050.js&quot;&gt; &lt;/script&gt;

</content>
 </entry>
 
 <entry>
   <title>Chrome Extension</title>
   <link href="http://localhost:4000/2016/04/06/chrome-extention/"/>
   <updated>2016-04-06T01:14:00-04:00</updated>
   <id>http://localhost:4000/2016/04/06/chrome-extention</id>
   <content type="html">&lt;h2 id=&quot;building-the-chrome-extension&quot;&gt;Building the Chrome Extension&lt;/h2&gt;

&lt;h5 id=&quot;prerequisites&quot;&gt;Prerequisites&lt;/h5&gt;

&lt;ul&gt;
  &lt;li&gt;html5&lt;/li&gt;
  &lt;li&gt;css3&lt;/li&gt;
  &lt;li&gt;javascript&lt;/li&gt;
&lt;/ul&gt;
</content>
 </entry>
 
 <entry>
   <title>Tools used for making Personal Website</title>
   <link href="http://localhost:4000/2016/04/04/tools-used/"/>
   <updated>2016-04-04T14:31:00-04:00</updated>
   <id>http://localhost:4000/2016/04/04/tools-used</id>
   <content type="html">&lt;h3 id=&quot;making-a-personal-website-using-githubs-free-hosting-for-the-jekyll-sites&quot;&gt;Making a personal website using GitHubs free Hosting for the Jekyll Sites&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;Ruby (Pre requisites for Jekyll) : https://jekyllrb.com/docs/installation/&lt;/li&gt;
  &lt;li&gt;Jekyll - for static site and blogging&lt;/li&gt;
  &lt;li&gt;Jade - no html&lt;/li&gt;
  &lt;li&gt;SASS&lt;/li&gt;
  &lt;li&gt;Autoprefixer - different permutations for the files&lt;/li&gt;
  &lt;li&gt;Browser Sync - JIT effects of changes&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Npm install gulp
Gulp&lt;/p&gt;

&lt;p&gt;gulp - jeykll
Download from git@github.com:shakyShane/jekyll-gulp-sass-browser-sync.git
Unzip in, goto that directory
And do
Npm install&lt;/p&gt;

&lt;p&gt;Goto that dorectory&lt;/p&gt;

&lt;p&gt;Gulp jade&lt;/p&gt;

&lt;p&gt;gulp&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Jekyll Blog and Free Hosting on GitHub!</title>
   <link href="http://localhost:4000/jekyll/update/2016/04/04/jekyll-blog-GitHub-hosting/"/>
   <updated>2016-04-04T14:31:00-04:00</updated>
   <id>http://localhost:4000/jekyll/update/2016/04/04/jekyll-blog-GitHub-hosting</id>
   <content type="html">&lt;p&gt;Making a personal website using GitHubs free Hosting for the Jekyll Sites&lt;/p&gt;

&lt;p&gt;Create a blog with naming convention of yyyy-mm-dd-name-of-the-blog.md and save it in _posts dircetory&lt;/p&gt;

&lt;p&gt;execute in the terminal&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll build&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;&lt;/p&gt;
</content>
 </entry>
 

</feed>
